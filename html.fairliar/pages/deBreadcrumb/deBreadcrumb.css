@charset "UTF-8";
/* response */
/* 아이콘 버튼 */
.breadcrumb {
  display: inline-flex;
  margin: 16px 0 -16px;
  text-align: left;
}
.breadcrumb > li {
  position: relative;
}
.breadcrumb > li:has(.sub) > a::after {
  content: "";
  display: inline-block;
  width: 13px;
  height: 13px;
  margin: 0 0 2px 4px;
  border: 1px solid #999;
  border-radius: 50%;
  background: url("data:image/svg+xml;charset=utf8,%0A%3Csvg xmlns='http://www.w3.org/2000/svg' width='7' height='4' viewBox='0 0 7 4' fill='none'%3E%3Cpath d='M6 1L3.5 3.5L1 1' stroke='%23999999' stroke-linecap='square' stroke-linejoin='round'/%3E%3C/svg%3E%0A") no-repeat 50%/auto;
  vertical-align: middle;
}
.breadcrumb > li + li {
  padding: 0 0 16px 32px;
  background: url("data:image/svg+xml;charset=utf8,%0A%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16' fill='none'%3E%3Cpath d='M6.5 5L9.5 8L6.5 11' stroke='%23BBBBBB' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A") no-repeat 8px 0/auto;
}
.breadcrumb > li:first-child > a::after {
  content: none;
}
.breadcrumb > li:last-child > a {
  color: #1d1d1d;
}
.breadcrumb > li:last-child > a::after {
  border-color: rgba(var(--color-primary), 1);
  background-image: url("data:image/svg+xml;charset=utf8,%0A%3Csvg xmlns='http://www.w3.org/2000/svg' width='7' height='4' viewBox='0 0 7 4' fill='none'%3E%3Cpath d='M6 1L3.5 3.5L1 1' stroke='%23131313' stroke-linecap='square' stroke-linejoin='round'/%3E%3C/svg%3E%0A");
}
.breadcrumb a {
  display: block;
  font-size: 14px;
  color: #999;
}
.breadcrumb .sub {
  position: absolute;
  left: 8px;
  top: 32px;
  overflow: hidden;
  min-width: 120px;
  height: 0;
  border-radius: 8px;
  background-color: #fff;
  z-index: 1;
}
.breadcrumb .sub a {
  padding: 8px 16px;
  color: #999;
}
.breadcrumb .sub a:hover {
  background-color: rgba(var(--color-primary), 1);
  color: #fff;
}
.breadcrumb .on .sub {
  height: auto;
  border: 1px solid rgba(var(--color-primary), 1);
  transition: 0.3s;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

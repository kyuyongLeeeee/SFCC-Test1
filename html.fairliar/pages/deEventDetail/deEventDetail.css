@charset "UTF-8";
/* response */
/* 아이콘 버튼 */
@media (max-width: 768px) {
  .deEventDetail > .inner {
    padding: 1.6rem 1.6rem 2.4rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

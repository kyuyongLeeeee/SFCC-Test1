@charset "UTF-8";
/* response */
/* 아이콘 버튼 */
.deForgotPassword .radio_wrap .radio_group {
  column-gap: 40px;
}
.deForgotPassword .auth_reault .check_group {
  height: 44px;
}
.deForgotPassword .auth_number {
  margin-top: 64px;
}
.deForgotPassword .icon_box {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 56px;
  height: 56px;
  margin: 16px auto 0;
  border-radius: 100%;
  background-color: #f2f2f2;
}
.deForgotPassword .text_info {
  margin: 16px 0;
  text-align: center;
}
.deForgotPassword .text_info.small {
  font-size: 14px;
  font-family: "pr";
  line-height: 1.6;
  color: #4d4d4d;
}
.deForgotPassword .text_title {
  font-family: ps;
  font-size: 16px;
  text-align: center;
}
.deForgotPassword .result .text_info.small {
  margin-top: 4px;
  margin-bottom: 0;
}
.deForgotPassword .result .text_title {
  margin-top: 16px;
}

@media (max-width: 768px) {
  .deForgotPassword .radio_wrap .radio_group.other {
    column-gap: 0;
    justify-content: space-between;
  }
  .deForgotPassword .text_info, .deForgotPassword .text_title {
    text-align: left;
  }
  .deForgotPassword .result .text_info, .deForgotPassword .result .text_title {
    text-align: center;
  }
  .deForgotPassword .result .info_box {
    margin-top: 1.6rem;
    padding: 2rem 1.6rem;
    text-align: left;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6L3dvcmtzcGFjZS9mYWlybGlhcl9wdWIvcHJvamVjdC9zcmMvYXNzZXRzL3Njc3MvYmFzZS9fbWl4aW5zLnNjc3MiLCJkZUZvcmdvdFBhc3N3b3JkL2RlRm9yZ290UGFzc3dvcmQuc2NzcyIsIkQ6L3dvcmtzcGFjZS9mYWlybGlhcl9wdWIvcHJvamVjdC9zcmMvYXNzZXRzL3Njc3MvYmFzZS9fdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUlBO0FBa0RBO0FDaERZO0VBQ0k7O0FBS1I7RUFDSTs7QUFHUjtFQUNJOztBQUVKO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFHQTtFQUNJO0VBQ0E7O0FBQ0E7RURvQ1IsV0ErS2M7RUE5S2QsYUFGc0M7RUFHdEMsYUE2S29CO0VDak5SLE9DWE47O0FEY0Y7RUFDSTtFQUNBO0VBQ0E7O0FBTUk7RUFDSTtFQUNBOztBQUdSO0VBQ0k7OztBQU1oQjtFQUVRO0lBQ0k7SUFDQTs7RUFHQTtJQUVJOztFQUtBO0lBRUk7O0VBR1I7SUFDSTtJQUNBO0lBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XHJcblxyXG5AdXNlIFwidmFyaWFibGVzXCIgYXMgKjtcclxuXHJcbi8qIHJlc3BvbnNlICovXHJcbkBtaXhpbiByZXNwb25zZSgkc2NyZWVuLXdpZHRoKXtcclxuICAgIEBpZiAkc2NyZWVuLXdpZHRoID09IFwicGNcIntcclxuICAgICAgICAvKiAxNDQxIH4gMTY1MCAqL1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxNDQxcHgpIGFuZCAobWF4LXdpZHRoOiAxNjUwcHgpe1xyXG4gICAgICAgICAgICBAY29udGVudDtcclxuICAgICAgICB9XHJcbiAgICB9IEBlbHNlIGlmICRzY3JlZW4td2lkdGggPT0gXCJ0YWJsZXRcIntcclxuICAgICAgICAvKiA3NjkgfiAxNDQwICovXHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTQ0MHB4KXtcclxuICAgICAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfSBAZWxzZSBpZiAkc2NyZWVuLXdpZHRoID09IFwibW9iaWxlXCJ7XHJcbiAgICAgICAgLyogfiA3NjggKi9cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpe1xyXG4gICAgICAgICAgICBAY29udGVudDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBoaWRkZW57XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgd2lkdGg6IDFweDtcclxuICAgIGhlaWdodDogMXB4O1xyXG4gICAgbWFyZ2luOiAtMXB4O1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMCAwLCAwIDAsIDAgMCk7XHJcbn1cclxuXHJcbi8vIOuwseq3uOudvOyatOuTnCDsnbTrr7jsp4BcclxuQG1peGluIGJhY2tncm91bmRJbWcoJHVybCwgJHBvc2l0aW9uOiBjZW50ZXIsICRzaXplOiBhdXRvKXtcclxuICAgIGJhY2tncm91bmQ6IHVybCgkdXJsKSBuby1yZXBlYXQgJHBvc2l0aW9uIC8gJHNpemU7XHJcbiAgICAvL2JhY2tncm91bmQtc2l6ZTogJHNpemU7XHJcbn1cclxuXHJcbi8vIFNWRyDslYTsnbTsvZhcclxuQG1peGluIHN2Z0ljb24oJHdpZHRoLCAkaGVpZ2h0LCAkdXJsKXtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiAkd2lkdGg7XHJcbiAgICBoZWlnaHQ6ICRoZWlnaHQ7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJHVybCkgbm8tcmVwZWF0IGNlbnRlciAvIGNvbnRhaW47XHJcbiAgICAvL2JhY2tncm91bmQtaW1hZ2U6IHVybCgkdXJsKTtcclxuICAgIC8vYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIC8vYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLyog7JWE7J207L2YIOuyhO2KvCAqL1xyXG5AbWl4aW4gaWNvbkJ0bigkd2lkdGgsICRoZWlnaHQsICR1cmwpe1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHdpZHRoOiAkd2lkdGg7XHJcbiAgICBoZWlnaHQ6ICRoZWlnaHQ7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJHVybCkgbm8tcmVwZWF0IGNlbnRlciAvIGNvbnRhaW47XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgdGV4dC1pbmRlbnQ6IDEwMCU7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG59XHJcblxyXG4vLyBURVhUXHJcbkBtaXhpbiB0eXBvKCRzaXplLCAkaGVpZ2h0OiAxLjQsICRmYW1pbHk6ICdwcicpe1xyXG4gICAgZm9udC1zaXplOiAkc2l6ZTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZmFtaWx5O1xyXG4gICAgbGluZS1oZWlnaHQ6ICRoZWlnaHQ7XHJcbn1cclxuXHJcbkBtaXhpbiB0ZXh0KCRzaXplLCAkaGVpZ2h0LCAkY29sb3IsICRzcGFjaW5nLCAkZmFtaWx5KXtcclxuICAgIGZvbnQtc2l6ZTogJHNpemU7XHJcbiAgICBmb250LWZhbWlseTogJGZhbWlseTtcclxuICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICBsaW5lLWhlaWdodDogJGhlaWdodDtcclxuICAgIGxldHRlci1zcGFjaW5nOiAkc3BhY2luZztcclxufVxyXG5cclxuLy8g7KCB7JqpIOyLnCBkaXNwbGF5IOyGjeyEsSDtlYTsiJgoYmxvY2ssIGlubGluZS1ibG9jaylcclxuQG1peGluIGVsbGlwc2lze1xyXG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDEgO1xyXG59XHJcblxyXG4vLyBFbGxpcHNpcyBmb3IgMiBsaW5lXHJcbkBtaXhpbiBlbGxpcHNpczJ7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xyXG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICAgIC8vIGxpbmUtaGVpZ2h0OiAxLjI1ZW07XHJcbiAgICAvLyBtYXgtaGVpZ2h0OiAyLjVlbTtcclxuXHJcbiAgICAvLyBAbWVkaWEgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSksICgtbXMtaGlnaC1jb250cmFzdDogbm9uZSl7XHJcbiAgICAvLyAgICAgcGFkZGluZy1yaWdodDogMWVtO1xyXG4gICAgLy8gICAgICY6OmJlZm9yZXtcclxuICAgIC8vICAgICAgICAgY29udGVudDogJy4uLic7XHJcbiAgICAvLyAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8vICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAvLyAgICAgICAgIGJvdHRvbTogMDtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgJjo6YWZ0ZXJ7XHJcbiAgICAvLyAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgLy8gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAvLyAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgLy8gICAgICAgICB3aWR0aDogMWVtO1xyXG4gICAgLy8gICAgICAgICBoZWlnaHQ6IDFlbTtcclxuICAgIC8vICAgICAgICAgbWFyZ2luLXRvcDogMC4ycmVtO1xyXG4gICAgLy8gICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxufVxyXG5cclxuLy8gRWxsaXBzaXMgZm9yIDMgbGluZVxyXG5AbWl4aW4gZWxsaXBzaXMze1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMztcclxuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbiAgICAvLyBsaW5lLWhlaWdodDogMS4yNWVtO1xyXG4gICAgLy8gbWF4LWhlaWdodDogNGVtO1xyXG5cclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSwgKC1tcy1oaWdoLWNvbnRyYXN0OiBub25lKXtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxZW07XHJcbiAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICBjb250ZW50OiAnLi4uJztcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxZW07XHJcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwLjJyZW07XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gRWxsaXBzaXMgZm9yIDQgbGluZVxyXG4vLyBAbWl4aW4gZWxsaXBzaXM0e1xyXG4vLyAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuLy8gICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4vLyAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbi8vICAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDQ7XHJcbi8vICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xyXG4vLyB9XHJcblxyXG4vLyBFbGxpcHNpcyBmb3IgNSBsaW5lXHJcbi8vIEBtaXhpbiBlbGxpcHNpczV7XHJcbi8vICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4vLyAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbi8vICAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuLy8gICAgIC13ZWJraXQtbGluZS1jbGFtcDogNTtcclxuLy8gICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbi8vIH1cclxuXHJcbi8vIFNWRyBJY29uXHJcbi8vIEBmdW5jdGlvbiBzdmdJY29uKCRuYW1lLCAkY29sb3Ipe1xyXG4vLyBcdCRwYXRoOiBtYXAtZ2V0KCRzeW1ib2wtbGlzdCwgJG5hbWUpO1xyXG4vLyBcdCRkYXRhOiBcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMjQgMjQnIHN0eWxlPSdmaWxsOiByZ2JhKFwiICsgcmVkKCRjb2xvcikgKyBcIixcIiArIGdyZWVuKCRjb2xvcikgKyBcIixcIiArIGJsdWUoJGNvbG9yKSArIFwiLDEpJyUzRSUzQ3BhdGggZD0nI3skcGF0aH0nLyUzRSUzQy9zdmclM0VcIjtcclxuLy8gXHRAcmV0dXJuIHVybCgkZGF0YSk7XHJcbi8vIH1cclxuXHJcbi8vIEBmdW5jdGlvbiBzdmdJY29uMigkbmFtZSwgJGNvbG9yLCAkdzoxNiwgJGg6MTYpe1xyXG4vLyBcdCRwYXRoOiBtYXAtZ2V0KCRzeW1ib2wtbGlzdCwgJG5hbWUpO1xyXG4vLyBcdCRkYXRhOiBcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nI3skd30nIGhlaWdodD0nI3skaH0nIHZpZXdCb3g9JzAgMCAjeyR3fSAjeyRofScgc3R5bGU9J2ZpbGw6IHJnYmEoXCIgKyByZWQoJGNvbG9yKSArIFwiLFwiICsgZ3JlZW4oJGNvbG9yKSArIFwiLFwiICsgYmx1ZSgkY29sb3IpICsgXCIsMSknJTNFJTNDcGF0aCBkPScjeyRwYXRofScvJTNFJTNDL3N2ZyUzRVwiO1xyXG4vLyBcdEByZXR1cm4gdXJsKCRkYXRhKTtcclxuLy8gfVxyXG5cclxuLy8gVHlwb2dyYXBoeSDsoJXsnZhcclxuQG1peGluIGRpczFUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygzNnB4LCAxLjIsICdhYicpO1xyXG59XHJcbkBtaXhpbiBtX2RpczFUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygzLjZyZW0sIDEuMiwgJ2FiJyk7XHJcbn1cclxuXHJcbkBtaXhpbiBoMVR5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDM2cHgsIDEuMiwgJ2FiJyk7XHJcbn1cclxuQG1peGluIG1faDFUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygzLjZyZW0sIDEuMiwgJ2FiJyk7XHJcbn1cclxuXHJcbkBtaXhpbiBoMlR5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDI0cHgsIDEuMiwgJ2FiJyk7XHJcbn1cclxuQG1peGluIG1faDJUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygyLjRyZW0sIDEuMiwgJ2FiJyk7XHJcbn1cclxuXHJcbkBtaXhpbiBoM1R5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDIycHgsIDEuMiwgJ3BzJyk7XHJcbn1cclxuQG1peGluIG1faDNUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygyLjJyZW0sIDEuMiwgJ3BzJyk7XHJcbn1cclxuXHJcbkBtaXhpbiBoNFR5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDE4cHgsIDEuNCwgJ3BzJyk7XHJcbn1cclxuQG1peGluIG1faDRUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygxLjhyZW0sIDEuNCwgJ3BzJyk7XHJcbn1cclxuXHJcbkBtaXhpbiBoNVR5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDE2cHgsIDEuNCwgJ3BzJyk7XHJcbn1cclxuQG1peGluIG1faDVUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygxLjZyZW0sIDEuNCwgJ3BzJyk7XHJcbn1cclxuXHJcblxyXG5AbWl4aW4gcDFUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygxOHB4KTtcclxufVxyXG5AbWl4aW4gbV9wMVR5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDEuOHJlbSk7XHJcbn1cclxuXHJcbkBtaXhpbiBwMlR5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDE2cHgpO1xyXG59XHJcbkBtaXhpbiBtX3AyVHlwb3tcclxuICAgIEBpbmNsdWRlIHR5cG8oMS42cmVtKTtcclxufVxyXG5cclxuQG1peGluIHAzVHlwb3tcclxuICAgIEBpbmNsdWRlIHR5cG8oMTRweCwgMS42KTtcclxufVxyXG5AbWl4aW4gbV9wM1R5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDEuNHJlbSwgMS42KTtcclxufVxyXG5cclxuQG1peGluIHA0VHlwb3tcclxuICAgIEBpbmNsdWRlIHR5cG8oMTJweCwgMS40KTtcclxufVxyXG5AbWl4aW4gbV9wNFR5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDEuMnJlbSwgMS40KTtcclxufVxyXG5cclxuQG1peGluIHA1VHlwb3tcclxuICAgIEBpbmNsdWRlIHR5cG8oMTBweCwgMS4yKTtcclxufVxyXG5AbWl4aW4gbV9wNVR5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDFyZW0sIDEuMik7XHJcbn1cclxuXHJcblxyXG5AbWl4aW4gc21hbGwxVHlwb3tcclxuICAgIEBpbmNsdWRlIHR5cG8oMTJweCwgMS40KTtcclxufVxyXG5AbWl4aW4gbV9zbWFsbDFUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygxLjJyZW0sIDEuNCk7XHJcbn1cclxuXHJcbkBtaXhpbiBzbWFsbDJUeXBve1xyXG4gICAgQGluY2x1ZGUgdHlwbygxMHB4LCAxLjIpO1xyXG59XHJcbkBtaXhpbiBtX3NtYWxsMlR5cG97XHJcbiAgICBAaW5jbHVkZSB0eXBvKDFyZW0sIDEuMik7XHJcbn0iLCIvLyBCQVNFIFNUQVJUXHJcbkB1c2UgXCIuLi8uLi9hc3NldHMvc2Nzcy91c2VcIiBhcyAqO1xyXG5cclxuLmRlRm9yZ290UGFzc3dvcmQge1xyXG4gICAgLnJhZGlve1xyXG4gICAgICAgICZfd3JhcHtcclxuICAgICAgICAgICAgLnJhZGlvX2dyb3Vwe1xyXG4gICAgICAgICAgICAgICAgY29sdW1uLWdhcDogNDBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5hdXRoX3JlYXVsdHtcclxuICAgICAgICAuY2hlY2tfZ3JvdXB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDRweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAuYXV0aF9udW1iZXJ7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNjRweDtcclxuICAgIH1cclxuICAgIC5pY29uX2JveHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgd2lkdGg6IDU2cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA1NnB4O1xyXG4gICAgICAgIG1hcmdpbjogMTZweCBhdXRvIDA7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xyXG4gICAgfVxyXG4gICAgLnRleHRfe1xyXG4gICAgICAgICZpbmZve1xyXG4gICAgICAgICAgICBtYXJnaW46IDE2cHggMDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAmLnNtYWxse1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgcDNUeXBvO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICR0ZXh0NjAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZ0aXRsZXtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IHBzO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAucmVzdWx0e1xyXG4gICAgICAgIC50ZXh0X3tcclxuICAgICAgICAgICAgJmluZm97XHJcbiAgICAgICAgICAgICAgICAmLnNtYWxse1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDRweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICZ0aXRsZXtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDE2cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgLmRlRm9yZ290UGFzc3dvcmQge1xyXG4gICAgICAgIC5yYWRpb193cmFwIC5yYWRpb19ncm91cC5vdGhlcntcclxuICAgICAgICAgICAgY29sdW1uLWdhcDogMDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAudGV4dF97XHJcbiAgICAgICAgICAgICZpbmZvLFxyXG4gICAgICAgICAgICAmdGl0bGV7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5yZXN1bHR7XHJcbiAgICAgICAgICAgIC50ZXh0X3tcclxuICAgICAgICAgICAgICAgICZpbmZvLFxyXG4gICAgICAgICAgICAgICAgJnRpdGxle1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuaW5mb19ib3h7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxLjZyZW07XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAycmVtIDEuNnJlbTtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAY2hhcnNldCBcIlVURi04XCI7XHJcblxyXG4vL0xheW91dCBIZWlnaHRcclxuJGhlYWRlckhlaWdodDogMTM0cHg7XHJcbiRmb290ZXJIZWlnaHQ6IDM3MXB4O1xyXG4kbW9IZWFkZXJIZWlnaHQ6IDUuNnJlbTtcclxuJG1vRm9vdGVySGVpZ2h0OiA1OXJlbTtcclxuXHJcbi8vIGdyYXlzY2FsZVxyXG4kd2hpdGU6ICNmZmY7XHJcbiRncmF5MTA6ICNmMmYyZjI7XHJcbiRncmF5MDk6ICNmN2Y3Zjc7XHJcbiRncmF5MDg6ICNlNWU1ZTU7XHJcbiRncmF5MDc6ICNkZGQ7XHJcbiRncmF5MDY6ICNkMmQyZDI7XHJcbiRncmF5MDU6ICNiYmI7XHJcbiRncmF5MDQ6ICM4ODg7XHJcbiRncmF5MDM6ICM4ODg7XHJcbiRncmF5MDI6ICM2NjY7XHJcbiRncmF5MDE6ICM2NjY7XHJcbiRibGFjazogIzAwMDtcclxuXHJcbiR0ZXh0MjAwOiAjYmJiO1xyXG4kdGV4dDUwMDogIzk5OTtcclxuJHRleHQ2MDA6ICM0ZDRkNGQ7XHJcbiR0ZXh0OTAwOiAjMWQxZDFkO1xyXG5cclxuJHBvaW50OiAjRjQ4MTZBO1xyXG4kbGlnaHRQb2ludDogI0ZGRjRGMTtcclxuJHN1YlBvaW50OiAjRTQ1QjhCO1xyXG5cclxuJGxpbmUxMDA6ICNlMGUwZTA7XHJcbiRsaW5lMjAwOiAjYWRhZGFkO1xyXG4kbGluZTYwMDogIzRkNGQ0ZDtcclxuJGxpbmU5MDA6ICMxZDFkMWQ7XHJcblxyXG4vLyBjb2xvclxyXG4kcHJpbWFyeTogcmdiYSh2YXIoLS1jb2xvci1wcmltYXJ5KSwgMSk7XHJcbiRwcmltYXJ5SG92ZXI6IHJnYmEodmFyKC0tY29sb3ItcHJpbWFyeS1ob3ZlciksIDEpO1xyXG4kcHJpbWFyeURpc2FibGVkOiByZ2JhKHZhcigtLWNvbG9yLXByaW1hcnktZGlzYWJsZWQpLCAxKTtcclxuJHByaW1hcnk4NTogcmdiYSh2YXIoLS1jb2xvci1wcmltYXJ5KSwgMC44NSk7XHJcbiRwcmltYXJ5NzA6IHJnYmEodmFyKC0tY29sb3ItcHJpbWFyeSksIDAuNzApO1xyXG4kcHJpbWFyeTU1OiByZ2JhKHZhcigtLWNvbG9yLXByaW1hcnkpLCAwLjU1KTtcclxuJHByaW1hcnk0MDogcmdiYSh2YXIoLS1jb2xvci1wcmltYXJ5KSwgMC40MCk7XHJcbiRwcmltYXJ5MjU6IHJnYmEodmFyKC0tY29sb3ItcHJpbWFyeSksIDAuMjUpO1xyXG4kcHJpbWFyeTEwOiByZ2JhKHZhcigtLWNvbG9yLXByaW1hcnkpLCAwLjEwKTtcclxuXHJcbiRzZWNvbmRhcnk6IHJnYmEodmFyKC0tY29sb3Itc2Vjb25kYXJ5KSwgMSk7XHJcbiRzZWNvbmRhcnlIb3ZlcjogcmdiYSh2YXIoLS1jb2xvci1zZWNvbmRhcnktaG92ZXIpLCAxKTtcclxuJHNlY29uZGFyeURpc2FibGVkOiByZ2JhKHZhcigtLWNvbG9yLXNlY29uZGFyeS1kaXNhYmxlZCksIDEpO1xyXG4kc2Vjb25kYXJ5ODU6IHJnYmEodmFyKC0tY29sb3Itc2Vjb25kYXJ5KSwgMC44NSk7XHJcbiRzZWNvbmRhcnk3MDogcmdiYSh2YXIoLS1jb2xvci1zZWNvbmRhcnkpLCAwLjcwKTtcclxuJHNlY29uZGFyeTU1OiByZ2JhKHZhcigtLWNvbG9yLXNlY29uZGFyeSksIDAuNTUpO1xyXG4kc2Vjb25kYXJ5NDA6IHJnYmEodmFyKC0tY29sb3Itc2Vjb25kYXJ5KSwgMC40MCk7XHJcbiRzZWNvbmRhcnkyNTogcmdiYSh2YXIoLS1jb2xvci1zZWNvbmRhcnkpLCAwLjI1KTtcclxuJHNlY29uZGFyeTEwOiByZ2JhKHZhcigtLWNvbG9yLXNlY29uZGFyeSksIDAuMTApO1xyXG5cclxuJHRlcnRpYXJ5OiByZ2JhKHZhcigtLWNvbG9yLXRlcnRpYXJ5KSwgMSk7XHJcbiR0ZXJ0aWFyeUhvdmVyOiByZ2JhKHZhcigtLWNvbG9yLXRlcnRpYXJ5LWhvdmVyKSwgMSk7XHJcbiR0ZXJ0aWFyeURpc2FibGVkOiByZ2JhKHZhcigtLWNvbG9yLXRlcnRpYXJ5LWRpc2FibGVkKSwgMSk7XHJcbiR0ZXJ0aWFyeTg1OiByZ2JhKHZhcigtLWNvbG9yLXRlcnRpYXJ5KSwgMC44NSk7XHJcbiR0ZXJ0aWFyeTcwOiByZ2JhKHZhcigtLWNvbG9yLXRlcnRpYXJ5KSwgMC43MCk7XHJcbiR0ZXJ0aWFyeTU1OiByZ2JhKHZhcigtLWNvbG9yLXRlcnRpYXJ5KSwgMC41NSk7XHJcbiR0ZXJ0aWFyeTQwOiByZ2JhKHZhcigtLWNvbG9yLXRlcnRpYXJ5KSwgMC40MCk7XHJcbiR0ZXJ0aWFyeTI1OiByZ2JhKHZhcigtLWNvbG9yLXRlcnRpYXJ5KSwgMC4yNSk7XHJcbiR0ZXJ0aWFyeTEwOiByZ2JhKHZhcigtLWNvbG9yLXRlcnRpYXJ5KSwgMC4xMCk7XHJcblxyXG4kYmc6ICNmMWYxZjE7XHJcbiRiZzI6ICNGN0Y3Rjc7XHJcblxyXG4kZXJyb3IgOiAjZGYzODJkO1xyXG4kZXJyb3JMaWdodCA6ICNmZmY4Zjg7XHJcbiRzdWNjZXNzIDogIzRmYjU4NDtcclxuJHN1Y2Nlc3NMaWdodCA6ICNmMGZmZjM7XHJcbiR3YXJuaW5nIDogI2ZmYjc1ZDtcclxuJHdhcm5pbmdMaWdodCA6ICNmZmZiZTc7XHJcbiRkaXNhYmxlZCA6ICNlMGUwZTA7XHJcbiRyZXF1aXJlZCA6ICNmNTA1Mzc7XHJcblxyXG4kYmx1ZTEwIDogIzQwNkVGRjtcclxuJHJlZDEwIDogI0U3NTA1MDtcclxuJHBpbms6ICNkNTUzYWE7XHJcbiRsaWdodHBpbms6ICNmY2Y1ZmQ7XHJcbiRob3RwaW5rOiAjRjAzQjc5O1xyXG4kcmVkOiAjZTM0MTQwO1xyXG4kbGlnaHRicmljazogI2JiNGI0YjtcclxuJGJyaWNrOiAjOGY1NzU3O1xyXG4kcHVycGxlOiAjNjYyZDkxO1xyXG4kbGlnaHRwdXJwbGU6I2Y5ZjVmZjtcclxuJHBpbmtwdXJwbGU6ICNkOTFlODg7XHJcbiRkZWVwcGluazojZGYzZmJhO1xyXG4kbGlnaHRvcmFuZ2U6ICNmYmFhNzU7XHJcbiR5ZWxsb3c6ICNmNmE1MTg7XHJcbiRvcmFuZ2U6ICNGRjg0MDA7XHJcbiRibHVlOiAjMjY3REQ0O1xyXG4kc2t5Ymx1ZTogIzM4YjFlNTtcclxuJGRlZXBibHVlOiAjMzQ3YmI5O1xyXG4kcGFsZWJsdWU6ICM2NGFiYzE7XHJcbiRwdXJwbGVibHVlOiAjNTI1N2ExO1xyXG4kZ3JlZW46ICM1ZWFmMDE7XHJcbiRsaWdodGdyZWVuOiAjYjFiOTM0O1xyXG4kZGVlcGdyZWVuOiAjMTM5YjM4O1xyXG4keWVsbG93Z3JlZW46ICM3MGJmM2M7XHJcbiRtaW50OiAjMmNiOWM5O1xyXG4kc2lsdmVyOiAjNjM2NzdjO1xyXG4kZ29sZDogIzk4NzY0MztcclxuJGphZGU6ICM1YjllODU7XHJcblxyXG4iXSwiZmlsZSI6ImRlRm9yZ290UGFzc3dvcmQvZGVGb3Jnb3RQYXNzd29yZC5jc3MifQ== */

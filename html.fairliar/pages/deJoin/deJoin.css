@charset "UTF-8";
/* response */
/* 아이콘 버튼 */
.deJoin .kakao_info {
  font-size: 18px;
  font-family: "pr";
  line-height: 1.4;
  text-align: center;
}
.deJoin .kakao .btn_wrap {
  margin-top: 16px;
}
.deJoin .separation {
  position: relative;
  margin: 32px 0;
  text-align: center;
}
.deJoin .separation .txt {
  display: inline-block;
  padding: 0 16px;
  font-size: 12px;
  font-family: "pr";
  line-height: 1.4;
  color: #999;
  background-color: #fff;
}
.deJoin .separation::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  width: 100%;
  height: 1px;
  background-color: #e0e0e0;
  z-index: -1;
}
.deJoin .ev_banner {
  margin-top: 32px;
  border-radius: 8px;
}
.deJoin .ev_banner a, .deJoin .ev_banner button {
  display: block;
}

@media (max-width: 768px) {
  .deJoin.column--min > .inner {
    padding: 1.6rem 1.6rem 2.4rem;
  }
  .deJoin.column--min > .inner .separation {
    margin: 2.4rem 0;
  }
  .deJoin.column--min > .inner .ev_banner {
    margin-top: 2.4rem;
    border-radius: 0;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

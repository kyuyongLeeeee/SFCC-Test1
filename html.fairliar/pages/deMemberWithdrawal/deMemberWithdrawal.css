@charset "UTF-8";
/* response */
/* 아이콘 버튼 */
.deMemberWithdrawal .popup_content {
  margin-bottom: 48px;
}
.deMemberWithdrawal .cont_title {
  display: block;
  margin-bottom: 8px;
  font-size: 18px;
  font-family: "pr";
  line-height: 1.4;
  font-family: ps;
}
.deMemberWithdrawal .cont_title:not(:first-child) {
  margin-top: 24px;
}
.deMemberWithdrawal .cont_text {
  font-size: 14px;
  font-family: "pr";
  line-height: 1.6;
}
.deMemberWithdrawal .cont_box {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin-top: 16px;
  padding: 16px 24px;
  background-color: #f1f1f1;
  font-size: 14px;
  font-family: "pr";
  line-height: 1.6;
}
.deMemberWithdrawal .cont_box .num {
  display: inline-block;
  margin-left: 8px;
  font-family: ps;
}

@media (max-width: 768px) {
  .deMemberWithdrawal .popup_content {
    margin: 0;
    padding: 2.4rem 1.6rem;
  }
  .deMemberWithdrawal .cont_title {
    font-size: 1.6rem;
    font-family: "pr";
    line-height: 1.4;
    font-family: ps;
  }
  .deMemberWithdrawal .cont_title:not(:first-child) {
    margin-top: 3.2rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

@charset "UTF-8";
/* response */
/* 아이콘 버튼 */
.deMypage .order_status {
  position: relative;
  margin-top: 40px;
}
.deMypage .order_status .breadcrumb_box.stage li {
  flex: 1;
}
.deMypage .order_status .total_list {
  display: flex;
}
.deMypage .order_status .total_list li {
  padding: 0 16px;
  border-left: 1px solid #adadad;
  font-size: 14px;
  font-family: "pr";
  line-height: 1.6;
}
.deMypage .order_status .total_list li:first-child {
  border-left: 0;
}
.deMypage .order_status .total_list li:last-child {
  padding-right: 0;
}
.deMypage .order_status .total_list li strong {
  margin-left: 4px;
  font-size: 16px;
  font-family: "pr";
  line-height: 1.4;
  font-family: ps;
  color: #999;
}
.deMypage .mypage_tab_wrap {
  margin-top: 0;
}
.deMypage .mypage_tab .icon_store {
  display: inline-block;
  vertical-align: middle;
  background-color: black;
  mask-size: 16px;
}
.deMypage .detail_view {
  margin-top: 32px;
}
.deMypage .prod_list > li:not(:last-child) .prod_item {
  border-style: dashed;
}
.deMypage .prod_list .btn_wrap .btn_point_arrow:hover:after {
  left: auto;
  border: 0;
}
.deMypage .prod_box > li:has(> .btn_wrap) .prod_list li:last-child {
  border-bottom: 0;
}

@media (max-width: 768px) {
  .deMypage > .inner {
    padding: 0 1.6rem 5.6rem;
  }
  .deMypage .order_status {
    margin-bottom: 4rem;
  }
  .deMypage .menus {
    width: 100vw;
    margin-left: -1.6rem;
    padding: 4rem 1.6rem 1.6rem;
    margin-top: 0;
    border-top: 1px solid #e0e0e0;
  }
  .deMypage .menus > ul {
    width: 100%;
  }
  .deMypage .menus > ul > li:not(:first-child) {
    margin-top: 4rem;
  }
  .deMypage .menus .title_box {
    padding: 0 0 1.2rem;
  }
  .deMypage .menu_list {
    display: flex;
    flex-wrap: wrap;
    border: 1px solid #e0e0e0;
  }
  .deMypage .menu_list li {
    position: relative;
    width: 50%;
  }
  .deMypage .menu_list li:nth-child(odd) {
    border-right: 1px solid #e0e0e0;
  }
  .deMypage .menu_list li:not(:first-child, :nth-child(2)) {
    border-top: 1px solid #e0e0e0;
  }
  .deMypage .menu_list li a, .deMypage .menu_list li button {
    display: block;
    padding: 16px 12px;
    font-size: 14px;
    font-family: "pr";
    line-height: 1.6;
  }
  .deMypage .menu_list li:has(a, button)::after {
    content: "";
    position: absolute;
    top: 35%;
    right: 1.2rem;
    width: 1.6rem;
    height: 1.6rem;
    background: url('data:image/svg+xml,<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.12988 4.05859L9.87988 7.99359L6.12988 11.9286" stroke="%231D1D1D" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>') no-repeat center/auto;
  }
  .deMypage .prod_item .options {
    padding: 0;
    margin: 0.4rem 0;
    background-color: #fff;
  }
  .deMypage .prod_item .options span {
    font-size: 1.2rem;
    font-family: "pr";
    line-height: 1.4;
    color: #999;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

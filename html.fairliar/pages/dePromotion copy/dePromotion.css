@charset "UTF-8";
/* response */
/* 아이콘 버튼 */
@media (max-width: 768px) {
  .dePromotion .promotion .section_inner {
    padding: 0;
  }
  .dePromotion .product .section_title {
    margin-bottom: 0.8rem;
  }
  .dePromotion .product .section_inner {
    padding: 0 1.6rem 4rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
